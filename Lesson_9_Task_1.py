'''
Задача 1. Определение количества различных подстрок с использованием хеш-функции.
Пусть на вход функции дана строка.
Требуется вернуть количество различных подстрок в этой строке.

Примечания:
* в сумму не включаем пустую строку и строку целиком;
* без использования функций для вычисления хэша (hash(), sha1() или любой другой из модуля hashlib задача считается не решённой.
'''
import hashlib

#функция поиска числа вхождений строки в подстроку
def count_sub(s: str, subs : str) -> int:
    assert len(s) > 0 and len(subs) > 0, 'Строка не можут быть пустой'
    assert len(s) >= len(subs), 'Подстрока длинее строки'

    len_sub = len(subs)
    h_subs = hashlib.sha1(subs.encode('utf-8')).hexdigest()
    count = 0

    for i in range(len(s) - len(subs) + 1):
        if h_subs == hashlib.sha1(s[i : i + len_sub].encode('utf-8')).hexdigest():
            if s[i : i + len_sub] == subs:
                count +=1

    return count

#функция поиска различных подстрок указанной длины
def find_sub(s: str, l: int) -> list:
    length = len(s)
    assert (length > l) & (l > 0), 'Только нетривиальные подстроки'

    subs = []
    i = 0
    while i + l <= length:
        subs.append(s[i:i+l])
        i += 1
    return list(set(subs))

s = input(f'Введите строку: ')
l = int(input(f'Различные нетривиальные подстроки какой длины будем считать: '))
sub_list = find_sub(s, l)
print()
print(f'Исходная строка: {s}')
for sub in sub_list:
    print(f'Подстрока "{sub}" встречается в исходной строке {count_sub(s, sub)} раз(а)'
          
'''
Пример работы алгоритма:
Введите строку: abracadabra
Различные нетривиальные подстроки какой длины будем считать: 2

Исходная строка: abracadabra
Подстрока "da" встречается в исходной строке 1 раз(а)
Подстрока "ac" встречается в исходной строке 1 раз(а)
Подстрока "ab" встречается в исходной строке 2 раз(а)
Подстрока "ca" встречается в исходной строке 1 раз(а)
Подстрока "ra" встречается в исходной строке 2 раз(а)
Подстрока "br" встречается в исходной строке 2 раз(а)
Подстрока "ad" встречается в исходной строке 1 раз(а)
'''